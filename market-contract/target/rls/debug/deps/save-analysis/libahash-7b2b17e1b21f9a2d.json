{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6","program":"/Users/phong/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ahash","--edition=2018","/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=7b2b17e1b21f9a2d","-C","extra-filename=-7b2b17e1b21f9a2d","--out-dir","/Users/phong/Documents/others/LEARNING/crypto/near/hackathon/ticketbox/market-contract/target/rls/debug/deps","-L","dependency=/Users/phong/Documents/others/LEARNING/crypto/near/hackathon/ticketbox/market-contract/target/rls/debug/deps","--extern","getrandom=/Users/phong/Documents/others/LEARNING/crypto/near/hackathon/ticketbox/market-contract/target/rls/debug/deps/libgetrandom-ee90d068b8d4da4f.rmeta","--extern","once_cell=/Users/phong/Documents/others/LEARNING/crypto/near/hackathon/ticketbox/market-contract/target/rls/debug/deps/libonce_cell-03a8370df96de2b7.rmeta","--cap-lints","allow","--cfg","feature=\"runtime-rng\"","--cfg","feature=\"folded_multiply\"","--error-format=json","--sysroot","/Users/phong/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/phong/Documents/others/LEARNING/crypto/near/hackathon/ticketbox/market-contract/target/rls/debug/deps/libahash-7b2b17e1b21f9a2d.rmeta"},"prelude":{"crate_id":{"name":"ahash","disambiguator":[16463376966582340228,0]},"crate_root":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src","external_crates":[{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8008232612675471143,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15888577660968845229,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6892144175080859156,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":4,"id":{"name":"alloc","disambiguator":[3565793394034309535,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":5,"id":{"name":"once_cell","disambiguator":[15082920850408692597,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":6,"id":{"name":"std","disambiguator":[8027050575120066951,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":7,"id":{"name":"libc","disambiguator":[10808514580016796197,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":8,"id":{"name":"unwind","disambiguator":[14992005934076611179,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":9,"id":{"name":"cfg_if","disambiguator":[8459615591451685309,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[5731055548632300263,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8721012102229179562,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":12,"id":{"name":"adler","disambiguator":[14477692191555384173,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":13,"id":{"name":"hashbrown","disambiguator":[4914282049766338053,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":14,"id":{"name":"std_detect","disambiguator":[8384054807963356085,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[16567849299098788489,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":16,"id":{"name":"addr2line","disambiguator":[6226073646123876484,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":17,"id":{"name":"gimli","disambiguator":[10236924175157371094,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":18,"id":{"name":"object","disambiguator":[15333000326822130836,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":19,"id":{"name":"memchr","disambiguator":[16857996330634927933,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[17409352502600447698,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":21,"id":{"name":"getrandom","disambiguator":[17244919011232396203,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":22,"id":{"name":"cfg_if","disambiguator":[13239534540403412062,0]}},{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","num":23,"id":{"name":"libc","disambiguator":[9212806105224517408,0]}}],"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":0,"byte_end":8507,"line_start":1,"line_end":263,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":785},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":2432,"byte_end":2439,"line_start":65,"line_end":65,"column_start":31,"column_end":38},"alias_span":null,"name":"AHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":794},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":2470,"byte_end":2481,"line_start":66,"line_end":66,"column_start":30,"column_end":41},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":2511,"byte_end":2521,"line_start":68,"line_end":68,"column_start":28,"column_end":38},"alias_span":null,"name":"CallHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":0,"byte_end":8507,"line_start":1,"line_end":263,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":44},{"krate":0,"index":84},{"krate":0,"index":106},{"krate":0,"index":190},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":238}],"decl_id":null,"docs":" AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.\n This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.\n It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.\n This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can\n induce a collision.","sig":null,"attributes":[{"value":"/ AHash is a hashing algorithm is intended to be a high performance, (hardware specific), keyed hash function.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":1,"column_start":1,"column_end":113}},{"value":"/ This can be seen as a DOS resistant alternative to `FxHash`, or a fast equivalent to `SipHash`.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":113,"byte_end":212,"line_start":2,"line_end":2,"column_start":1,"column_end":100}},{"value":"/ It provides a high speed hash algorithm, but where the result is not predictable without knowing a Key.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":213,"byte_end":320,"line_start":3,"line_end":3,"column_start":1,"column_end":108}},{"value":"/ This allows it to be used in a `HashMap` without allowing for the possibility that an malicious user can","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":321,"byte_end":429,"line_start":4,"line_end":4,"column_start":1,"column_end":109}},{"value":"/ induce a collision.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":430,"byte_end":453,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":454,"byte_end":457,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # How aHash works","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":458,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":480,"byte_end":483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ aHash uses the hardware AES instruction on x86 processors to provide a keyed hash function.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":484,"byte_end":579,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ aHash is not a cryptographically secure hash.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":580,"byte_end":629,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":630,"byte_end":633,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":634,"byte_end":647,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":648,"byte_end":655,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use ahash::{AHasher, RandomState};","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":656,"byte_end":694,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":695,"byte_end":729,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":730,"byte_end":733,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut map: HashMap<i32, i32, RandomState> = HashMap::default();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":734,"byte_end":803,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":804,"byte_end":827,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":828,"byte_end":835,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ For convinence wrappers called `AHashMap` and `AHashSet` are also provided.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":836,"byte_end":915,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ These to the same thing with slightly less typing.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":916,"byte_end":970,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ ```ignore","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":971,"byte_end":984,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use ahash::AHashMap;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":985,"byte_end":1009,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut map: AHashMap<i32, i32> = AHashMap::with_capacity(4);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1014,"byte_end":1079,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ map.insert(12, 34);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1080,"byte_end":1103,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ map.insert(56, 78);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1104,"byte_end":1127,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1128,"byte_end":1135,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"deny(clippy :: correctness, clippy :: complexity, clippy :: perf)","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1136,"byte_end":1199,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"allow(clippy :: pedantic, clippy :: cast_lossless, clippy ::\nunreadable_literal)","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1200,"byte_end":1278,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":1329,"byte_end":1335,"line_start":31,"line_end":31,"column_start":51,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13934,"byte_end":13941,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"AHasher","qualname":"::fallback_hash::AHasher","value":"AHasher {  }","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"decl_id":null,"docs":" A `Hasher` for hashing an arbitrary stream of bytes.","sig":null,"attributes":[{"value":"/ A `Hasher` for hashing an arbitrary stream of bytes.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13440,"byte_end":13496,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13497,"byte_end":13500,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Instances of [`AHasher`] represent state that is updated while hashing data.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13501,"byte_end":13581,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13582,"byte_end":13585,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Each method updates the internal state based on the new data provided. Once","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13586,"byte_end":13665,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ all of the data has been provided, the resulting hash can be obtained by calling","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13666,"byte_end":13750,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ `finish()`","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13751,"byte_end":13765,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13766,"byte_end":13769,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [Clone] is also provided in case you wish to calculate hashes for two different items that","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13770,"byte_end":13864,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ start with the same data.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13865,"byte_end":13894,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":13895,"byte_end":13898,"line_start":22,"line_end":22,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14171,"byte_end":14184,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"new_with_keys","qualname":"<AHasher>::new_with_keys","value":"fn new_with_keys(u128, u128) -> AHasher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hasher keyed to the provided key.\n","sig":null,"attributes":[{"value":"/ Creates a new hasher keyed to the provided key.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14023,"byte_end":14074,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14079,"byte_end":14088,"line_start":32,"line_end":32,"column_start":5,"column_end":14}},{"value":"allow(dead_code)","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14093,"byte_end":14112,"line_start":33,"line_end":33,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20035,"byte_end":20043,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<AHasher as core::hash::Hasher>::write_u8","value":"fn write_u8(&mut Self, u8)","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10128},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20018,"byte_end":20027,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20123,"byte_end":20132,"line_start":153,"line_end":153,"column_start":8,"column_end":17},"name":"write_u16","qualname":"<AHasher as core::hash::Hasher>::write_u16","value":"fn write_u16(&mut Self, u16)","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20106,"byte_end":20115,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20213,"byte_end":20222,"line_start":158,"line_end":158,"column_start":8,"column_end":17},"name":"write_u32","qualname":"<AHasher as core::hash::Hasher>::write_u32","value":"fn write_u32(&mut Self, u32)","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10130},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20196,"byte_end":20205,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20303,"byte_end":20312,"line_start":163,"line_end":163,"column_start":8,"column_end":17},"name":"write_u64","qualname":"<AHasher as core::hash::Hasher>::write_u64","value":"fn write_u64(&mut Self, u64)","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10131},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20286,"byte_end":20295,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20393,"byte_end":20403,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"write_u128","qualname":"<AHasher as core::hash::Hasher>::write_u128","value":"fn write_u128(&mut Self, u128)","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10132},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20376,"byte_end":20385,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20587,"byte_end":20598,"line_start":174,"line_end":174,"column_start":8,"column_end":19},"name":"write_usize","qualname":"<AHasher as core::hash::Hasher>::write_usize","value":"fn write_usize(&mut Self, usize)","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10133},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20467,"byte_end":20476,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"cfg(any(target_pointer_width = \"64\", target_pointer_width = \"32\",\ntarget_pointer_width = \"16\"))","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20481,"byte_end":20579,"line_start":173,"line_end":173,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20861,"byte_end":20866,"line_start":186,"line_end":186,"column_start":8,"column_end":13},"name":"write","qualname":"<AHasher as core::hash::Hasher>::write","value":"fn write(&mut Self, &[u8])","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10127},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20807,"byte_end":20816,"line_start":184,"line_end":184,"column_start":5,"column_end":14}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20821,"byte_end":20853,"line_start":185,"line_end":185,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":21886,"byte_end":21892,"line_start":212,"line_end":212,"column_start":8,"column_end":14},"name":"finish","qualname":"<AHasher as core::hash::Hasher>::finish","value":"fn finish(&Self) -> u64","parent":{"krate":1,"index":10125},"children":[],"decl_id":{"krate":1,"index":10126},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":21829,"byte_end":21838,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"folded_multiply\")","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":21843,"byte_end":21878,"line_start":211,"line_end":211,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39259,"byte_end":39271,"line_start":53,"line_end":53,"column_start":11,"column_end":23},"name":"RandomSource","qualname":"::random_state::RandomSource","value":"RandomSource","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":147}],"decl_id":null,"docs":" A supplier of Randomness used for different hashers.\n See [RandomState.set_random_source].\n","sig":null,"attributes":[{"value":"/ A supplier of Randomness used for different hashers.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39151,"byte_end":39207,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/ See [RandomState.set_random_source].","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39208,"byte_end":39248,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39282,"byte_end":39297,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"get_fixed_seeds","qualname":"::random_state::RandomSource::get_fixed_seeds","value":"fn get_fixed_seeds(&Self) -> &'static [[u64; ]; ]","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39340,"byte_end":39355,"line_start":57,"line_end":57,"column_start":8,"column_end":23},"name":"gen_hasher_seed","qualname":"::random_state::RandomSource::gen_hasher_seed","value":"fn gen_hasher_seed(&Self) -> usize","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":794},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42129,"byte_end":42140,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::random_state::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"decl_id":null,"docs":" Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create\n [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","sig":null,"attributes":[{"value":"/ Provides a [Hasher] factory. This is typically used (e.g. by [HashMap]) to create","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41789,"byte_end":41874,"line_start":145,"line_end":145,"column_start":1,"column_end":86}},{"value":"/ [AHasher]s in order to hash the keys of the map. See `build_hasher` below.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41875,"byte_end":41953,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41954,"byte_end":41957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [build_hasher]: ahash::","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41958,"byte_end":41985,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":41986,"byte_end":42017,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42018,"byte_end":42059,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42060,"byte_end":42100,"line_start":151,"line_end":151,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42283,"byte_end":42286,"line_start":161,"line_end":161,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RandomState as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9902},"children":[],"decl_id":{"krate":1,"index":9903},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43151,"byte_end":43168,"line_start":177,"line_end":177,"column_start":12,"column_end":29},"name":"set_random_source","qualname":"<RandomState>::set_random_source","value":"fn set_random_source<impl RandomSource + Send + Sync + 'static>(impl RandomSource + Send + Sync + 'static)\n-> Result<(), bool> where\nimpl RandomSource + Send + Sync + 'static: RandomSource + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Provides an optional way to manually supply a source of randomness for Hasher keys.","sig":null,"attributes":[{"value":"/ Provides an optional way to manually supply a source of randomness for Hasher keys.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42408,"byte_end":42495,"line_start":168,"line_end":168,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42500,"byte_end":42503,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The provided [RandomSource] will be used to be used as a source of randomness by [RandomState] to generate new states.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42508,"byte_end":42630,"line_start":170,"line_end":170,"column_start":5,"column_end":127}},{"value":"/ If this method is not invoked the standard source of randomness is used as described in the Readme.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42635,"byte_end":42738,"line_start":171,"line_end":171,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42743,"byte_end":42746,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The source of randomness can only be set once, and must be set before the first RandomState is created.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42751,"byte_end":42858,"line_start":173,"line_end":173,"column_start":5,"column_end":112}},{"value":"/ If the source has already been specified `Err` is returned with a `bool` indicating if the set failed because","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42863,"byte_end":42976,"line_start":174,"line_end":174,"column_start":5,"column_end":118}},{"value":"/ method was previously invoked (true) or if the default source is already being used (false).","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42981,"byte_end":43077,"line_start":175,"line_end":175,"column_start":5,"column_end":101}},{"value":"cfg(not(all(target_arch = \"arm\", target_os = \"none\")))","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43082,"byte_end":43139,"line_start":176,"line_end":176,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43888,"byte_end":43891,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState>::new","value":"fn new() -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Use randomly generated keys\n","sig":null,"attributes":[{"value":"/ Use randomly generated keys","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43831,"byte_end":43862,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":43867,"byte_end":43876,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44281,"byte_end":44294,"line_start":205,"line_end":205,"column_start":12,"column_end":25},"name":"generate_with","qualname":"<RandomState>::generate_with","value":"fn generate_with(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for supplying seeds, but each time it is called the resulting state will be different.\n This is done using a static counter, so it can safely be used with a fixed keys.\n","sig":null,"attributes":[{"value":"/ Allows for supplying seeds, but each time it is called the resulting state will be different.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44069,"byte_end":44166,"line_start":202,"line_end":202,"column_start":5,"column_end":102}},{"value":"/ This is done using a static counter, so it can safely be used with a fixed keys.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44171,"byte_end":44255,"line_start":203,"line_end":203,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":44260,"byte_end":44269,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45398,"byte_end":45407,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"with_seed","qualname":"<RandomState>::with_seed","value":"fn with_seed(usize) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting a seed to used.","sig":null,"attributes":[{"value":"/ Allows for explicitly setting a seed to used.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45240,"byte_end":45289,"line_start":235,"line_end":235,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45294,"byte_end":45297,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Note: This method does not require the provided seed to be strong.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45302,"byte_end":45372,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45377,"byte_end":45386,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45815,"byte_end":45825,"line_start":249,"line_end":249,"column_start":18,"column_end":28},"name":"with_seeds","qualname":"<RandomState>::with_seeds","value":"const fn with_seeds(u64, u64, u64, u64) -> RandomState","parent":null,"children":[],"decl_id":null,"docs":" Allows for explicitly setting the seeds to used.","sig":null,"attributes":[{"value":"/ Allows for explicitly setting the seeds to used.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45561,"byte_end":45613,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45618,"byte_end":45621,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Note: This method is robust against 0s being passed for one or more of the parameters","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45626,"byte_end":45715,"line_start":246,"line_end":246,"column_start":5,"column_end":94}},{"value":"/ or the same value being passed for more than one parameter.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45720,"byte_end":45783,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45788,"byte_end":45797,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46031,"byte_end":46038,"line_start":256,"line_end":256,"column_start":8,"column_end":15},"name":"default","qualname":"<RandomState as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46014,"byte_end":46023,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47310,"byte_end":47322,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"build_hasher","qualname":"<RandomState as core::hash::BuildHasher>::build_hasher","value":"fn build_hasher(&Self) -> AHasher","parent":{"krate":1,"index":10160},"children":[],"decl_id":{"krate":1,"index":10162},"docs":" Constructs a new [AHasher] with keys based on this [RandomState] object.\n This means that two different [RandomState]s will will generate\n [AHasher]s that will return different hashcodes, but [Hasher]s created from the same [BuildHasher]\n will generate the same hashes for the same input data.","sig":null,"attributes":[{"value":"/ Constructs a new [AHasher] with keys based on this [RandomState] object.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46147,"byte_end":46223,"line_start":264,"line_end":264,"column_start":5,"column_end":81}},{"value":"/ This means that two different [RandomState]s will will generate","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46228,"byte_end":46295,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"/ [AHasher]s that will return different hashcodes, but [Hasher]s created from the same [BuildHasher]","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46300,"byte_end":46402,"line_start":266,"line_end":266,"column_start":5,"column_end":107}},{"value":"/ will generate the same hashes for the same input data.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46407,"byte_end":46465,"line_start":267,"line_end":267,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46470,"byte_end":46473,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46478,"byte_end":46492,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46497,"byte_end":46500,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46505,"byte_end":46512,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use ahash::{AHasher, RandomState};","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46517,"byte_end":46555,"line_start":272,"line_end":272,"column_start":5,"column_end":43}},{"value":"/ use std::hash::{Hasher, BuildHasher};","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46560,"byte_end":46601,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46606,"byte_end":46609,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let build_hasher = RandomState::new();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46614,"byte_end":46656,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/ let mut hasher_1 = build_hasher.build_hasher();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46661,"byte_end":46712,"line_start":276,"line_end":276,"column_start":5,"column_end":56}},{"value":"/ let mut hasher_2 = build_hasher.build_hasher();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46717,"byte_end":46768,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46773,"byte_end":46776,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ hasher_1.write_u32(1234);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46781,"byte_end":46810,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ hasher_2.write_u32(1234);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46815,"byte_end":46844,"line_start":280,"line_end":280,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46849,"byte_end":46852,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hasher_1.finish(), hasher_2.finish());","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46857,"byte_end":46910,"line_start":282,"line_end":282,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46915,"byte_end":46918,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let other_build_hasher = RandomState::new();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46923,"byte_end":46971,"line_start":284,"line_end":284,"column_start":5,"column_end":53}},{"value":"/ let mut different_hasher = other_build_hasher.build_hasher();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46976,"byte_end":47041,"line_start":285,"line_end":285,"column_start":5,"column_end":70}},{"value":"/ different_hasher.write_u32(1234);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47046,"byte_end":47083,"line_start":286,"line_end":286,"column_start":5,"column_end":42}},{"value":"/ assert_ne!(different_hasher.finish(), hasher_1.finish());","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47088,"byte_end":47149,"line_start":287,"line_end":287,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47154,"byte_end":47161,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ [Hasher]: std::hash::Hasher","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47166,"byte_end":47197,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/ [BuildHasher]: std::hash::BuildHasher","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47202,"byte_end":47243,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/ [HashMap]: std::collections::HashMap","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47248,"byte_end":47288,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":47293,"byte_end":47302,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":201},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50354,"byte_end":50364,"line_start":41,"line_end":41,"column_start":11,"column_end":21},"name":"CallHasher","qualname":"::specialize::CallHasher","value":"CallHasher","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":" Provides a way to get an optimized hasher for a given data type.\n Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash\n for a specific type. So this may be faster for primitive types.\n # Example\n ```\n use std::hash::BuildHasher;\n use ahash::RandomState;\n use ahash::CallHasher;","sig":null,"attributes":[{"value":"/ Provides a way to get an optimized hasher for a given data type.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49432,"byte_end":49500,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ Rather than using a Hasher generically which can hash any value, this provides a way to get a specialized hash","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49501,"byte_end":49615,"line_start":18,"line_end":18,"column_start":1,"column_end":115}},{"value":"/ for a specific type. So this may be faster for primitive types.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49616,"byte_end":49683,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ # Example","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49684,"byte_end":49697,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49698,"byte_end":49705,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use std::hash::BuildHasher;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49706,"byte_end":49737,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ use ahash::RandomState;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49738,"byte_end":49765,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ use ahash::CallHasher;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49766,"byte_end":49792,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49793,"byte_end":49796,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let hash_builder = RandomState::new();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49797,"byte_end":49839,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ //...","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49840,"byte_end":49849,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ let value: u32 = 17;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49850,"byte_end":49874,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/ let hash = u32::get_hash(&value, &hash_builder);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49875,"byte_end":49927,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49928,"byte_end":49935,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ Note that the type used to invoke `get_hash` must be the same a the type of value passed.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":49936,"byte_end":50029,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ For example get a hasher specialized on `[u8]` can invoke:","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50030,"byte_end":50092,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50093,"byte_end":50100,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ /// use std::hash::BuildHasher;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50101,"byte_end":50136,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use ahash::RandomState;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50137,"byte_end":50166,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ # use ahash::CallHasher;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50167,"byte_end":50195,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # let hash_builder = RandomState::new();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50196,"byte_end":50240,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/ let bytes: [u8; 4] = [1, 2, 3, 4];","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50241,"byte_end":50279,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ let hash = <[u8]>::get_hash(&bytes, &hash_builder);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50280,"byte_end":50335,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50336,"byte_end":50343,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50374,"byte_end":50382,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"get_hash","qualname":"::specialize::CallHasher::get_hash","value":"fn get_hash<H, B>(&H, &B) -> u64 where H: Hash + ?Sized, B: BuildHasher","parent":{"krate":0,"index":201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50569,"byte_end":50577,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"get_hash","qualname":"<T as specialize::CallHasher>::get_hash","value":"fn get_hash<H, B>(&H, &B) -> u64 where H: Hash + ?Sized, B: BuildHasher","parent":{"krate":0,"index":201},"children":[],"decl_id":{"krate":0,"index":202},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50552,"byte_end":50561,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4481,"byte_end":4488,"line_start":124,"line_end":124,"column_start":8,"column_end":15},"name":"default","qualname":"<AHasher as core::default::Default>::default","value":"fn default() -> AHasher","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":" Constructs a new [AHasher] with fixed keys.\n If `std` is enabled these will be generated upon first invocation.\n Otherwise if the `compile-time-rng`feature is enabled these will be generated at compile time.\n If neither of these features are available, hardcoded constants will be used.","sig":null,"attributes":[{"value":"/ Constructs a new [AHasher] with fixed keys.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3512,"byte_end":3559,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ If `std` is enabled these will be generated upon first invocation.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3564,"byte_end":3634,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ Otherwise if the `compile-time-rng`feature is enabled these will be generated at compile time.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3639,"byte_end":3737,"line_start":102,"line_end":102,"column_start":5,"column_end":103}},{"value":"/ If neither of these features are available, hardcoded constants will be used.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3742,"byte_end":3823,"line_start":103,"line_end":103,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3828,"byte_end":3831,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Because the values are fixed, different hashers will all hash elements the same way.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3836,"byte_end":3924,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ This could make hash values predictable, if DOS attacks are a concern. If this behaviour is","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3929,"byte_end":4024,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ not required, it may be preferable to use [RandomState] instead.","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4029,"byte_end":4097,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4102,"byte_end":4105,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4110,"byte_end":4124,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4129,"byte_end":4132,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4137,"byte_end":4144,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use ahash::AHasher;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4149,"byte_end":4172,"line_start":112,"line_end":112,"column_start":5,"column_end":28}},{"value":"/ use std::hash::Hasher;","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4177,"byte_end":4203,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4208,"byte_end":4211,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut hasher_1 = AHasher::default();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4216,"byte_end":4258,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/ let mut hasher_2 = AHasher::default();","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4263,"byte_end":4305,"line_start":116,"line_end":116,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4310,"byte_end":4313,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ hasher_1.write_u32(1234);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4318,"byte_end":4347,"line_start":118,"line_end":118,"column_start":5,"column_end":34}},{"value":"/ hasher_2.write_u32(1234);","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4352,"byte_end":4381,"line_start":119,"line_end":119,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4386,"byte_end":4389,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hasher_1.finish(), hasher_2.finish());","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4394,"byte_end":4447,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4452,"byte_end":4459,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4464,"byte_end":4473,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]}],"impls":[{"id":12,"kind":"Inherent","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14009,"byte_end":14016,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20004,"byte_end":20011,"line_start":146,"line_end":146,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39733,"byte_end":39752,"line_start":79,"line_end":79,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":40079,"byte_end":40098,"line_start":93,"line_end":93,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42262,"byte_end":42273,"line_start":160,"line_end":160,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42389,"byte_end":42400,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45996,"byte_end":46007,"line_start":254,"line_end":254,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46101,"byte_end":46112,"line_start":261,"line_end":261,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50516,"byte_end":50517,"line_start":46,"line_end":46,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3498,"byte_end":3505,"line_start":99,"line_end":99,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4952,"byte_end":4953,"line_start":141,"line_end":141,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":14009,"byte_end":14016,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/fallback_hash.rs","byte_start":20004,"byte_end":20011,"line_start":146,"line_end":146,"column_start":17,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":785},"to":{"krate":1,"index":10125}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":39733,"byte_end":39752,"line_start":79,"line_end":79,"column_start":6,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":40079,"byte_end":40098,"line_start":93,"line_end":93,"column_start":23,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":152},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42262,"byte_end":42273,"line_start":160,"line_end":160,"column_start":21,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":794},"to":{"krate":1,"index":9902}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":42389,"byte_end":42400,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":45996,"byte_end":46007,"line_start":254,"line_end":254,"column_start":18,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":794},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/random_state.rs","byte_start":46101,"byte_end":46112,"line_start":261,"line_end":261,"column_start":22,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":794},"to":{"krate":1,"index":10160}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/specialize.rs","byte_start":50516,"byte_end":50517,"line_start":46,"line_end":46,"column_start":24,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":201}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":3498,"byte_end":3505,"line_start":99,"line_end":99,"column_start":18,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":785},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4638,"byte_end":4649,"line_start":130,"line_end":130,"column_start":34,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":10160},"to":{"krate":0,"index":231}},{"span":{"file_name":"/Users/phong/.cargo/registry/src/github.com-1ecc6299db9ec823/ahash-0.7.6/src/lib.rs","byte_start":4952,"byte_end":4953,"line_start":141,"line_end":141,"column_start":41,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":239},"to":{"krate":0,"index":231}}]}